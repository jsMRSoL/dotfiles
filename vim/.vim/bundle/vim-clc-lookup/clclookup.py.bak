#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys, re, subprocess

HERMES = '/home/simon/.vim/bundle/vim-clc-lookup/hermes.sh'
DATABASE = '/home/simon/.vim/bundle/vim-clc-lookup/clc4-vocab'

def make_list(input_string):
    """Assemble list of headwords for lookup """
    pattern = re.compile(r'\W+')
    input_list = pattern.split(input_string)
    word_list = [ to_headword(word) for word in input_list if len(word) > 0 ]
    flat_list = [ word for list in word_list for word in list ]
    return flat_list

def to_headword(inflected):
    """Runs inflected form through hermes.sh
    :returns: headword as string
    """
    result = subprocess.run([HERMES, inflected],
        stdout=subprocess.PIPE)
    result = result.stdout.decode('utf-8')
    return result.split()

def to_definition(headword):
    """Looks up headword in custom list
    :returns: string
    """
    entry = subprocess.run(['grep', '-m2', '^' + headword + '[, ]', DATABASE], stdout=subprocess.PIPE)
    entry = entry.stdout.decode('utf-8')
    return entry.strip()

if __name__ == "__main__":
    if sys.argv == 1:
        print('No argument was given')
    else:
        lookuplist = make_list(sys.argv[1])
        for item in lookuplist:
            answer = to_definition(item)
            if len(answer):
                print('- ', answer)
