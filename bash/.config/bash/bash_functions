########################
## custom functions
########################
function tagger() {
	lltag --clear --yes "$1" && \
	lltag -a "$2" --yes "$1" && \
	lltag -t "$3" --yes "$1"
}

function vff() {
    [ -z "$1" ] && echo "\$1 must be a directory" ; return
	vim "$(find "$1" | fzf -e --select-1)"

}

function vf() { find . | fzf | xargs bash -c '</dev/tty $EDITOR "$@"' ignoreme ;}

function cheat() {
	vim "$(find /home/simon/.dotfiles/help | fzf -e --query="$1" --select-1)"
}

function cfg() {
	vim "$(find /home/simon/.config | fzf -e --query="$1" --select-1)"
}

function snipper() {
	options="-i ${1} -ss ${2} -t ${3} -c:a copy -c:v copy ${4}";
	ffmpeg "$options"
}

function bak() {
    for file in "$@"; do
        cp "$file" "$file.bak"
    done
}

function m() {
    if tmux has-session -t music; then
        tmux attach -t music
        exit
    fi

    tmux new-session -d -s music -n playlist
    tmux set status off
    tmux set-window-option -t music:playlist window-style 'bg=#1d1f21'
    tmux send-keys -t music:playlist "ncmpcpp -c ~/.config/ncmpcpp/config" Enter
    tmux split-window -t music:playlist -h
    tmux send-keys -t music:playlist.right "ncmpcpp" Enter
    tmux send-keys -t music:playlist.right "8" Enter
    tmux split-window -t music:playlist.right -v
    tmux send-keys -t music:playlist.bottom-right "ncmpcpp" Enter
    tmux send-keys -t music:playlist.bottom-right "2" Enter
    tmux resize-pane -t music:playlist.left -R 10
    tmux attach -t music:playlist.left
}

function v() {
    if tmux has-session -t Editor; then
        tmux attach -t Editor
        exit
    fi

    tmux new-session -d -s Editor -n vim
    tmux send-keys -t Editor:vim "vim -c Files" Enter
    tmux split-window -t Editor:vim -h
    tmux resize-pane -t Editor:vim.left -R 10
    tmux attach -t Editor:vim.left
}

function n() {
    if tmux has-session -t RSS; then
        tmux attach -t RSS
        exit
    fi

    tmux new-session -d -s RSS -n newsbeuter
    tmux send-keys -t RSS:newsbeuter "newsbeuter" Enter
    tmux attach -t RSS:newsbeuter
}

function how_in() {
    where="$1"; shift
    IFS=+ curl "https://cht.sh/$where/$*"
}

function contains() { [[ "$1" =~ (^|[[:space:]])"$2"($|[[:space:]]) ]] ;}

function vu() {
    export FIFO_UEBERZUG="/tmp/vifm-ueberzug-${PPID}"
    cleanup() {
        rm "$FIFO_UEBERZUG" 2>/dev/null
        pkill -P $$ 2>/dev/null
    }
    rm "$FIFO_UEBERZUG" 2>/dev/null
    mkfifo "$FIFO_UEBERZUG"
    trap cleanup EXIT
    tail --follow "$FIFO_UEBERZUG" | ueberzug layer --silent --parser bash &
    vifm "$@"
    cleanup
}

function escr() {
    FILE=$( whereis "$1" | cut -d' ' -f2 )
    if [ "$(stat -c %U "$FILE")" == "$USER" ]; then
        vim "$FILE"
    else
        sudo vim "$FILE"
    fi
}

########################
## emacs/vterm functions
########################
vterm_printf(){
    if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ] ); then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}

vterm_prompt_end(){
    vterm_printf "51;A$(whoami)@$HOSTNAME:$(pwd)"
}
PS1=$PS1'\[$(vterm_prompt_end)\]'

########################
## END custom functions
########################
