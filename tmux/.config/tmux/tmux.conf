# To use zsh
# set -g default-shell /usr/bin/zsh
# set -g default-command /usr/bin/zsh
# TO use a 256 colour terminal
set -g default-terminal 'tmux-256color'
# set -g pane-border-bg colour236
# set -g pane-border-fg colour75
# set -g pane-active-border-bg colour234
# set -g pane-active-border-fg colour75
# set -g window-style 'bg=colour236'
# set -g window-active-style 'bg=colour234'
# set -g status-bg colour233
# set -g status-fg colour137
# Change the prefix key to C-Space
# set -g pane-border-bg '#282a2e'
# set -g pane-border-fg '#81a2be'
# set -g pane-active-border-bg '#1d1f21'
# set -g pane-active-border-fg '#81a2be'
# set -g window-style 'bg=#282a2e'
# set -g window-active-style 'bg=#000000'
# statusbar
# set -g status-left '#[fg=#282a2e,bg=#81a2be,bold] Session: #S #[bg=#282a2e,fg=#81a2be,bold]î‚°'
set -g status-justify left
set -g status-bg colour232
# set -g status-fg colour7
set -g status-attr dim
set -g status-left '#[fg=#bbbbbb,bg=#b02f30,bold] #S '
set -g status-right ''

setw -g window-status-fg '#81a2be'
setw -g window-status-bg '#282a2e'
setw -g window-status-attr none
# setw -g window-status-current-fg '#81a2be'
setw -g window-status-current-fg '#bbbbbb'
setw -g window-status-current-bg '#000000'
setw -g window-status-current-attr bold
#setw -g window-status-format '#[bg=#282a2e,fg=#81a2be] #I:#W '
setw -g window-status-format '#[bg=#000000,fg=#bbbbbb] #I:#W '
setw -g window-status-current-format ' #I:#W '
set-window-option -g automatic-rename on
# Keys
unbind C-b
#bind C-Space send-prefix
set -g prefix C-Space
# Mouse
set -g mouse on
#-------- Copy Mode (Vim Style) {{{
#------------------------------------------------------
# This section of hotkeys mainly work in copy mode and no where else

# vim keys in copy and choose mode
set-window-option -g mode-keys vi

#bind-key Escape copy-mode			# enter copy mode; default [
unbind p
bind-key p paste-buffer				# paste; (default hotkey: ] )
bind-key P choose-buffer 			# tmux clipboard history
bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"

# Send To Tmux Clipboard or System Clipboard
bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "Copy To Tmux Clipboard"
bind-key > run-shell 'tmux show-buffer | xsel -i -b' \; display-message "Copy To System Clipboard"

# vim copy mode rebinds 
  bind-key -T copy-mode-vi v send-keys -X begin-selection
  bind-key -T copy-mode-vi V send-keys -X select-line
  bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
  bind-key -T choice-mode-vi h send-keys -X tree-collapse 
  bind-key -T choice-mode-vi l send-keys -X tree-expand 
  bind-key -T choice-mode-vi H send-keys -X tree-collapse-all 
  bind-key -T choice-mode-vi L send-keys -X tree-expand-all 
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"
  bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"


#My binds
# fix delay time between tmux & vim
set-option -sg escape-time 0
# default shell
set-option -g default-shell /usr/bin/fish
# edit config shortcut
bind-key e new-window -n 'config' 'vim ~/.config/tmux/tmux.conf && tmux source ~/.config/tmux/tmux.conf && tmux display "config updated"'
# reload configuration
unbind r
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "Configuration reloaded"
# test bind
bind-key m display-message 'Test message'
# send pane to urlview
bind-key C-v capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" 'cat /tmp/tmux-buffer | urlview && tmux kill-window'
# send pane to w3m
bind-key C-c capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "w3m" 'cat /tmp/tmux-buffer | w3m && tmux kill-window'
##
## pane selection
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R
bind  | split-window -h
bind  - split-window -v
bind 0 select-window -t @0
bind 1 select-window -t @1
bind 2 select-window -t @2
bind 3 select-window -t @3
bind 4 select-window -t @4
bind 5 select-window -t @5
bind 6 select-window -t @6
## window selection
# bind -n M-h previous-window
# bind -n M-l next-window
